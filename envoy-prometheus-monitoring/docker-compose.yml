version: '3.7'
services:
  # front-envoy accepts requests from the users
  # and proxy its request to http-backend-envoy
  front-envoy:
    build:
      context: './front'
    networks:
      - envoymesh
    expose:
      - "80"
      - "8001"
    ports:
      - "8000:80"
      - "8001:8001" # admin

  # http-backend-envoy is a front envoy of http-backend
  http-backend-envoy:
    build:
      context: './http-backend-envoy'
    networks:
      envoymesh:
        aliases:
          - backend-envoy
    ports:
      - '8090:8090'
      - '8091:8091' # admin

  # backend HTTP application
  # this is running behind front-envoy
  http-backend:
    image: kenju/go-http-api:latest
    expose:
      - '8081'
    networks:
      envoymesh:
        aliases:
          - backend
    deploy:
      # NOTE: use version 3+ and pass `--compatibility` option
      # @see https://github.com/docker/compose/issues/5586#issuecomment-375580132
      replicas: 3
    environment:
      ADDR: ':8081'

  # statsd_exporter export container's metrics in StatsD format
  # @doc https://github.com/prometheus/statsd_exporter
  statsd_exporter:
    image: prom/statsd-exporter:latest
    ports:
      - "9125:9125" # TCP/UDP address on which to receive statsd metric lines
      - "9102:9102" # the web interface
    command: "--log.level='debug'"
    networks:
      envoymesh:
        aliases:
          - statsd-exporter

  # prometheus pull metrics from statsd_exporter in every few seconds
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus.yaml
    ports:
      - '9090:9090' # the web interface
    command: "--config.file=/etc/prometheus.yaml"
    networks:
      - envoymesh

  # grafana uses prometheus as its data source to visualize metrics
  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000' # the web interface
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./grafana/dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
    networks:
      - envoymesh

networks:
  envoymesh: {}
